S3=[    10,  0,  9, 14,  6,  3, 15,  5,  1, 13, 12,  7, 11,  4,  2,  8,  
    13,  7,  0,  9,  3,  4,  6, 10,  2,  8,  5, 14, 12, 11, 15,  1,  
    13,  6,  4,  9,  8, 15,  3,  0, 11,  1,  2, 12,  5, 10, 14,  7,
     1, 10, 13,  0,  6,  9,  8,  7,  4, 15, 14,  3, 11,  5,  2, 12]
S4=[
     7, 13, 14,  3,  0,  6,  9, 10,  1,  2,  8,  5, 11, 12,  4, 15,  
    13,  8, 11,  5,  6, 15,  0,  3,  4,  7,  2, 12,  1, 10, 14,  9,  
    10,  6,  9,  0, 12, 11,  7, 13, 15,  1,  3, 14,  5,  2,  8,  4,
     3, 15,  0,  6, 10,  1, 13,  8,  9,  4,  5, 11, 12,  7,  2, 14
]
def shift(a):
    return ((((a&0b100000)>>4)+(a&0b000001))<<4)|((a&0b011110)>>1)

unitedDDT=[0] * 256

for i in range(64):
     x1=i
     x2=i^0b10000
     
     a=S4[shift(x1)]^S4[shift(x2)]
     for j in range(16):
          y1=(j<<2)+(x1>>4)
          y2=(j<<2)+(x2>>4)
          if y1>=64 or y2>=64:
               break
          b=S3[shift(y1)]^S3[shift(y2)]
          unitedDDT[b<<4|a]+=1
          
print(unitedDDT)
print(sum(unitedDDT))
mask=0
for i in range(256):
     if unitedDDT[i]>0:
          mask=mask|i
          #print(bin(mask))
          
print(bin(mask))
m=max(unitedDDT)
print(m)
for index, element in enumerate(unitedDDT):
     if element == m:
          print(bin(index))